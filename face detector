{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNq7G21c9k5Xkw9ZMs7qQzt"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"IXFeqAE-g3cH","executionInfo":{"status":"ok","timestamp":1686638938458,"user_tz":-420,"elapsed":553,"user":{"displayName":"Mabima Alfata Muda Abadi","userId":"14091604566239285068"}}},"outputs":[],"source":["import imutils\n","import numpy as np\n","import cv2\n","from google.colab.patches import cv2_imshow\n","from IPython.display import display, Javascript\n","from google.colab.output import eval_js\n","from base64 import b64decode"]},{"cell_type":"code","source":["def take_photo(filename='photo.jpg', quality=0.8):\n","  js = Javascript('''\n","    async function takePhoto(quality) {\n","      const div = document.createElement('div');\n","      const capture = document.createElement('button');\n","      capture.textContent = 'Capture';\n","      div.appendChild(capture);\n","\n","      const video = document.createElement('video');\n","      video.style.display = 'block';\n","      const stream = await navigator.mediaDevices.getUserMedia({video: true});\n","\n","      document.body.appendChild(div);\n","      div.appendChild(video);\n","      video.srcObject = stream;\n","      await video.play();\n","\n","      // Resize the output to fit the video element.\n","      google.colab.output.setIframeHeight(document.documentElement.scrollHeight, true);\n","\n","      // Wait for Capture to be clicked.\n","      await new Promise((resolve) => capture.onclick = resolve);\n","\n","      const canvas = document.createElement('canvas');\n","      canvas.width = video.videoWidth;\n","      canvas.height = video.videoHeight;\n","      canvas.getContext('2d').drawImage(video, 0, 0);\n","      stream.getVideoTracks()[0].stop();\n","      div.remove();\n","      return canvas.toDataURL('image/jpeg', quality);\n","    }\n","    ''')\n","  display(js)\n","  data = eval_js('takePhoto({})'.format(quality))\n","  binary = b64decode(data.split(',')[1])\n","  with open(filename, 'wb') as f:\n","    f.write(binary)\n","  return filename"],"metadata":{"id":"iN-6Y6s-g518","executionInfo":{"status":"ok","timestamp":1686639029462,"user_tz":-420,"elapsed":430,"user":{"displayName":"Mabima Alfata Muda Abadi","userId":"14091604566239285068"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["image_file = take_photo()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":37},"id":"mgkfymwKhSeW","outputId":"f199377b-7551-44a5-b843-00ed62457725"},"execution_count":null,"outputs":[{"data":{"application/javascript":["\n","    async function takePhoto(quality) {\n","      const div = document.createElement('div');\n","      const capture = document.createElement('button');\n","      capture.textContent = 'Capture';\n","      div.appendChild(capture);\n","\n","      const video = document.createElement('video');\n","      video.style.display = 'block';\n","      const stream = await navigator.mediaDevices.getUserMedia({video: true});\n","\n","      document.body.appendChild(div);\n","      div.appendChild(video);\n","      video.srcObject = stream;\n","      await video.play();\n","\n","      // Resize the output to fit the video element.\n","      google.colab.output.setIframeHeight(document.documentElement.scrollHeight, true);\n","\n","      // Wait for Capture to be clicked.\n","      await new Promise((resolve) => capture.onclick = resolve);\n","\n","      const canvas = document.createElement('canvas');\n","      canvas.width = video.videoWidth;\n","      canvas.height = video.videoHeight;\n","      canvas.getContext('2d').drawImage(video, 0, 0);\n","      stream.getVideoTracks()[0].stop();\n","      div.remove();\n","      return canvas.toDataURL('image/jpeg', quality);\n","    }\n","    "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{},"output_type":"display_data"}]},{"cell_type":"code","source":["#image = cv2.imread(image_file, cv2.IMREAD_UNCHANGED)\n","image = cv2.imread(image_file)\n","\n","# resize it to have a maximum width of 400 pixels\n","image = imutils.resize(image, width=400)\n","(h, w) = image.shape[:2]\n","print(w,h)\n","cv2_imshow(image)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":259},"id":"eO4K7dC6hT9O","executionInfo":{"status":"ok","timestamp":1686639272823,"user_tz":-420,"elapsed":95,"user":{"displayName":"Mabima Alfata Muda Abadi","userId":"14091604566239285068"}},"outputId":"d166efed-01b6-419b-ed4f-6f09e5542d37"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["400 225\n"]},{"output_type":"display_data","data":{"text/plain":["<PIL.Image.Image image mode=RGB size=400x225 at 0x7F439A96F7F0>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["!wget -N https://raw.githubusercontent.com/opencv/opencv/master/samples/dnn/face_detector/deploy.prototxt\n","!wget -N https://raw.githubusercontent.com/opencv/opencv_3rdparty/dnn_samples_face_detector_20170830/res10_300x300_ssd_iter_140000.caffemodel"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aoCCs0guhXLW","executionInfo":{"status":"ok","timestamp":1686639273350,"user_tz":-420,"elapsed":610,"user":{"displayName":"Mabima Alfata Muda Abadi","userId":"14091604566239285068"}},"outputId":"b8a3d1d8-f88b-496c-8c0c-ebafdfb92760"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["--2023-06-13 06:57:27--  https://raw.githubusercontent.com/opencv/opencv/master/samples/dnn/face_detector/deploy.prototxt\n","Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.110.133, 185.199.109.133, 185.199.108.133, ...\n","Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.110.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 28104 (27K) [text/plain]\n","Saving to: ‘deploy.prototxt’\n","\n","deploy.prototxt     100%[===================>]  27.45K  --.-KB/s    in 0s      \n","\n","Last-modified header missing -- time-stamps turned off.\n","2023-06-13 06:57:27 (158 MB/s) - ‘deploy.prototxt’ saved [28104/28104]\n","\n","--2023-06-13 06:57:27--  https://raw.githubusercontent.com/opencv/opencv_3rdparty/dnn_samples_face_detector_20170830/res10_300x300_ssd_iter_140000.caffemodel\n","Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n","Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 10666211 (10M) [application/octet-stream]\n","Saving to: ‘res10_300x300_ssd_iter_140000.caffemodel’\n","\n","res10_300x300_ssd_i 100%[===================>]  10.17M  --.-KB/s    in 0.03s   \n","\n","Last-modified header missing -- time-stamps turned off.\n","2023-06-13 06:57:27 (322 MB/s) - ‘res10_300x300_ssd_iter_140000.caffemodel’ saved [10666211/10666211]\n","\n"]}]},{"cell_type":"code","source":["print(\"[INFO] loading model...\")\n","prototxt = 'deploy.prototxt'\n","model = 'res10_300x300_ssd_iter_140000.caffemodel'\n","net = cv2.dnn.readNetFromCaffe(prototxt, model)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xS7erygohbNA","executionInfo":{"status":"ok","timestamp":1686639273362,"user_tz":-420,"elapsed":143,"user":{"displayName":"Mabima Alfata Muda Abadi","userId":"14091604566239285068"}},"outputId":"93938278-f5af-4b52-873a-0740a3f38c44"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["[INFO] loading model...\n"]}]},{"cell_type":"code","source":["# resize it to have a maximum width of 400 pixels\n","image = imutils.resize(image, width=400)\n","blob = cv2.dnn.blobFromImage(cv2.resize(image, (300, 300)), 1.0, (300, 300), (104.0, 177.0, 123.0))"],"metadata":{"id":"RDqZ6980heWE","executionInfo":{"status":"ok","timestamp":1686639273363,"user_tz":-420,"elapsed":132,"user":{"displayName":"Mabima Alfata Muda Abadi","userId":"14091604566239285068"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["print(\"[INFO] computing object detections...\")\n","net.setInput(blob)\n","detections = net.forward()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N8qgOtnThgw1","executionInfo":{"status":"ok","timestamp":1686639273414,"user_tz":-420,"elapsed":180,"user":{"displayName":"Mabima Alfata Muda Abadi","userId":"14091604566239285068"}},"outputId":"ad3ea068-2a39-43c4-c32f-eec4a4deb40a"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["[INFO] computing object detections...\n"]}]},{"cell_type":"code","source":["for i in range(0, detections.shape[2]):\n","\n","\t# extract the confidence (i.e., probability) associated with the prediction\n","\tconfidence = detections[0, 0, i, 2]\n","\n","\t# filter out weak detections by ensuring the `confidence` is\n","\t# greater than the minimum confidence threshold\n","\tif confidence > 0.5:\n","\t\t# compute the (x, y)-coordinates of the bounding box for the object\n","\t\tbox = detections[0, 0, i, 3:7] * np.array([w, h, w, h])\n","\t\t(startX, startY, endX, endY) = box.astype(\"int\")\n","\t\t# draw the bounding box of the face along with the associated probability\n","\t\ttext = \"{:.2f}%\".format(confidence * 100)\n","\t\ty = startY - 10 if startY - 10 > 10 else startY + 10\n","\t\tcv2.rectangle(image, (startX, startY), (endX, endY), (0, 0, 255), 2)\n","\t\tcv2.putText(image, text, (startX, y),\n","\t\t\tcv2.FONT_HERSHEY_SIMPLEX, 0.45, (0, 0, 255), 2)"],"metadata":{"id":"K42X8X9Jhiy4","executionInfo":{"status":"ok","timestamp":1686639273430,"user_tz":-420,"elapsed":183,"user":{"displayName":"Mabima Alfata Muda Abadi","userId":"14091604566239285068"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["cv2_imshow(image)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":242},"id":"VDBtxhn-hk6M","executionInfo":{"status":"ok","timestamp":1686639273432,"user_tz":-420,"elapsed":183,"user":{"displayName":"Mabima Alfata Muda Abadi","userId":"14091604566239285068"}},"outputId":"29a5250c-dd46-497d-cb8f-63f34ae6c47b"},"execution_count":10,"outputs":[{"output_type":"display_data","data":{"text/plain":["<PIL.Image.Image image mode=RGB size=400x225 at 0x7F4370923C40>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"sazOupyvhnQt"},"execution_count":null,"outputs":[]}]}